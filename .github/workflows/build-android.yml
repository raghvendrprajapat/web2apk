name: Build Android (Signed APK & AAB)

on:
  workflow_dispatch:
    inputs:
      APP_NAME:
        description: "App Name"
        required: true
        default: "My Web2APK"
      APP_ID:
        description: "Package ID (e.g., com.example.app)"
        required: true
        default: "com.example.web2apk"
      WEB_URL:
        description: "Web App URL (https://...)"
        required: true
        default: "https://example.com"
      CALLBACK_URL:
        description: "Make.com callback webhook URL (optional)"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Ensure Node project & Capacitor deps
        run: |
          if [ ! -f package.json ]; then npm init -y; fi
          npm i @capacitor/core @capacitor/cli @capacitor/android
          mkdir -p dist
          echo '<!doctype html><html><body>Web2APK</body></html>' > dist/index.html

      - name: Initialize/Update Capacitor config
        run: |
          if [ ! -f capacitor.config.json ]; then
            npx cap init "${{ github.event.inputs.APP_NAME }}" "${{ github.event.inputs.APP_ID }}" --web-dir=dist --skip-dependencies
          fi
          node -e "
            const fs=require('fs'); const p='capacitor.config.json';
            const j=fs.existsSync(p)?JSON.parse(fs.readFileSync(p,'utf8')):{};
            j.appId='${{ github.event.inputs.APP_ID }}';
            j.appName='${{ github.event.inputs.APP_NAME }}';
            j.webDir='dist';
            j.server=j.server||{};
            j.server.url='${{ github.event.inputs.WEB_URL }}';
            j.android=j.android||{allowMixedContent:true};
            fs.writeFileSync(p,JSON.stringify(j,null,2));
          "

      - name: Add Android & Sync
        run: |
          npx cap add android || true
          npx cap sync android

      - name: Decode keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > my-release-key.jks

      - name: Build (release, signed)
        working-directory: android
        run: |
          ./gradlew clean
          ./gradlew assembleRelease bundleRelease \
            -Pandroid.injected.signing.store.file=../my-release-key.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            app/build/outputs/apk/release/*.apk
            app/build/outputs/bundle/release/*.aab
