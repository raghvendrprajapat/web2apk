name: Build Android (Signed APK & AAB)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm' # npm dependencies ke liye caching saksham karein

      - name: Install Dependencies with npm ci
        run: npm ci # 'npm install' se tez aur vishvasaneey

      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Capacitor Dependencies
        run: |
          npm i @capacitor/core @capacitor/android --save-exact
          npm i -g @capacitor/cli

      - name: Initialize Capacitor and Sync Android
        run: |
          npx cap init "Your App Name" "com.your.app.id" --web-dir "www"
          npx cap add android
          npx cap sync android
      
      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/release-key.jks

      - name: Build Signed App Bundle (AAB) and APK
        working-directory: android
        run: |
          chmod +x./gradlew
          # AAB (Play Store ke liye) banayein
         ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=$PWD/app/release-key.jks \
            -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}"
          
          # APK (testing ke liye) banayein
         ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$PWD/app/release-key.jks \
            -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
            -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
            -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}"

      - name: Clean up Keystore
        if: always() # Yah hamesha chalega, bhale hi build fail ho jaaye
        run: rm -f android/app/release-key.jks

      - name: Upload AAB (Play Store Ready)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: android/app/build/outputs/bundle/release/*.aab

      - name: Upload APK (for testing)
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/*.apk
          
