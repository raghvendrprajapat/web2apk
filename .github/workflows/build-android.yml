name: Build Android (Signed APK & AAB)

on:
  workflow_dispatch:
    inputs:
      APP_NAME:
        description: "App Name"
        required: true
        default: "My Web2APK"
      APP_ID:
        description: "Package ID (e.g., com.example.app)"
        required: true
        default: "com.example.web2apk"
      WEB_URL:
        description: "Web App URL (https://...)"
        required: true
        default: "https://example.com"
      CALLBACK_URL:
        description: "Make.com callback webhook URL (optional)"
        required: false
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: |
            platform-tools
            platforms;android-34
            build-tools;34.0.0

      - name: Ensure Node project & Capacitor deps
        run: |
          if [ ! -f package.json ]; then
            npm init -y
          fi
          npm i -E @capacitor/cli @capacitor/core
          npm i -D -E @capacitor/android
          mkdir -p dist
          if [ ! -f dist/index.html ]; then
            echo "<!doctype html><title>Web2APK</title>" > dist/index.html
          fi

      - name: Generate Capacitor config (if missing)
        env:
          APP_NAME: ${{ github.event.inputs.APP_NAME }}
          APP_ID:   ${{ github.event.inputs.APP_ID }}
          WEB_URL:  ${{ github.event.inputs.WEB_URL }}
        run: |
          if [ ! -f capacitor.config.json ] && [ ! -f capacitor.config.ts ]; then
            node -e "const fs=require('fs');const c={appId:process.env.APP_ID,appName:process.env.APP_NAME,webDir:'dist',server:{url:process.env.WEB_URL,androidScheme:'https',cleartext:false,allowNavigation:[process.env.WEB_URL]}};fs.writeFileSync('capacitor.config.json',JSON.stringify(c,null,2));"
          fi

      - name: Add Android & Sync
        run: |
          npx cap add android || true
          npx cap sync android

      # >>>> यहाँ पर अब Java सेट करें (Gradle फाइलें मौजूद हैं)
      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      # ---- Signing: expect secrets present ----
      # KEYSTORE_BASE64, KEYSTORE_PASSWORD, KEY_ALIAS, KEY_PASSWORD
      - name: Decode keystore from secret
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        shell: bash
        run: |
          mkdir -p android
          printf '%s' "$KEYSTORE_BASE64" | base64 -d > android/my-release-key.jks

      - name: Verify keystore
        working-directory: android
        run: |
          keytool -list -keystore my-release-key.jks -storepass "${{ secrets.KEYSTORE_PASSWORD }}" >/dev/null

      - name: Build (release, signed)
        working-directory: android
        run: |
          ./gradlew clean
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$PWD/my-release-key.jks \
            -Pandroid.injected.signing.store.password='${{ secrets.KEYSTORE_PASSWORD }}' \
            -Pandroid.injected.signing.key.alias='${{ secrets.KEY_ALIAS }}' \
            -Pandroid.injected.signing.key.password='${{ secrets.KEY_PASSWORD }}'
          ./gradlew bundleRelease \
            -Pandroid.injected.signing.store.file=$PWD/my-release-key.jks \
            -Pandroid.injected.signing.store.password='${{ secrets.KEYSTORE_PASSWORD }}' \
            -Pandroid.injected.signing.key.alias='${{ secrets.KEY_ALIAS }}' \
            -Pandroid.injected.signing.key.password='${{ secrets.KEY_PASSWORD }}'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/bundle/release/*.aab

      - name: Callback to Make.com (optional)
        if: ${{ github.event.inputs.CALLBACK_URL != '' }}
        run: |
          curl -sS -X POST "${{ github.event.inputs.CALLBACK_URL }}" \
            -H "Content-Type: application/json" \
            -d "{\"repo\":\"${GITHUB_REPOSITORY}\",\"run_id\":${GITHUB_RUN_ID}}"
